@use 'reset';
@use 'text';
@use 'colors';
@use 'layout';
@use 'mixins';

@use 'lighttheme';

$bg-high: colors.$grey-800;
$bg-medium: colors.$grey-850;
$bg-low: colors.$grey-900;

$text-color: colors.$grey-50;
$divider-color: colors.$grey-700;

$bg: $bg-high;

body {
  background: $bg;
  
  font-family: Proxima Nova, sans-serif;
  color: $text-color;
}

nav {
  > div {
    $border-side: 'bottom';
    @include mixins.borderStyle($border-side);
    border-#{$border-side}-color: $divider-color;
  }

  h4 {
    font-family: Nunito, sans-serif;
    @include text.extraHighContrast();

    span {
      font-weight: 300;
    }
  }

  li {
    margin: 0 1rem;
    float: left;

    &:first-child {
      margin-left: 0;
    }

    a {
      @include text.mediumContrastWithHover();
    }
  }
}

main {
  .toggle {
    @include text.highContrastWithHover();
    font-weight: 300;
    
    cursor: pointer;
  }

  tr {
    &:nth-child(even) {
      background: $bg-medium;
    }

    transition: background-color 0.5s;
  }

  th {
    text-align: left;
    
    div {
      @include text.mediumContrast();
      
      &.sortable {
        @include text.mediumContrastHover();
        cursor: pointer;
      }
    }
  }

  th, td {
    white-space: nowrap;
    cursor: default;
  }

  tbody {
    tr:hover {
      background: rgba(colors.$primary-500, 0.10) !important;
    }
  }
}

.sidebar, .sidebar-buffer {
  $bg: $bg-low;

  background: $bg;

  $border-side: 'right';
  @include mixins.borderStyle($border-side);
  border-#{$border-side}-color: $divider-color;
}

.searchbar {
  background: $bg-low;
  @include mixins.borderStyle();
  border-color: $divider-color;

  input {
    color: $text-color;
    @include text.mediumContrast();
    font-weight: 300;
    font-size: 0.8rem;

    background: none;
    border: none;
    @include mixins.noFocus();
  }
}

.button-group {
  label {
    @include text.mediumContrast();
    font-size: 0.875rem;
  }
}

button {
  $transition-length: text.$hover-transition-length;
  background: $bg-low;

  @include mixins.borderStyle();
  border-color: $divider-color;
  @include mixins.noFocus();

  cursor: pointer;

  span {
    color: $text-color;
    font-size: 0.85rem;
    @include text.mediumContrast();
    transition: opacity $transition-length;
  }

  transition: border-color $transition-length;

  &:hover {
    border-color: 'border-color', colors.$grey-600;
    
    span {
      opacity: map-get(text.$hover-opacity, 'medium');
    }
  }
}