@mixin typeScale($scale) {
  $size: 1rem;

  @for $h from 6 to 0 {
    h#{$h} {
      font-size: $size;
      margin: ($size * 0.5) 0;
      font-weight: 400;
    }

    $size: $size * $scale; 
  }
}

@include typeScale(1.25);

h1, h2, h3, h4, h5, h6, a, li {
  line-height: 1.5;
}

$text-opacity: (extraHigh: 95%, high: 87%, medium: 60%, low: 38%);

@mixin extraHighContrast() { opacity: map-get($text-opacity, 'extraHigh'); }
@mixin highContrast() { opacity: map-get($text-opacity, 'extraHigh'); };
@mixin mediumContrast() { opacity: map-get($text-opacity, 'medium'); };
@mixin lowContrast() { opacity: map-get($text-opacity, 'low'); };

$hover-transition-length: 0.25s;

@mixin hover($hover-opacity) {
  transition: opacity $hover-transition-length;

  &:hover {
    opacity: $hover-opacity;
  }
}

@function getHoverOpacity($contrast, $next-highest-contrast: false) {
  $low-value: map-get($text-opacity, $contrast);
  $high-value: 100%;

  @if $next-highest-contrast {
    $high-value: map-get($text-opacity, $next-highest-contrast);
  }

  @return $low-value + (($high-value - $low-value) / 2);
}

$hover-opacity: (high: 100%, medium: getHoverOpacity('medium', 'high'), low: getHoverOpacity('medium', 'low'));

@mixin highContrastHover() {
  @include hover(map-get($hover-opacity, 'high'))
}

@mixin mediumContrastHover() {
  @include hover(map-get($hover-opacity, 'medium'));
}

@mixin lowContrastHover() {
  @include hover(map-get($hover-opacity, 'low'));
}



@mixin highContrastWithHover() {
  @include highContrast();
  @include highContrastHover();
}

@mixin mediumContrastWithHover() {
  @include mediumContrast();
  @include mediumContrastHover();
}

@mixin lowContrastWithHover() {
  @include lowContrast();
  @include lowContrastHover();
}

input, button {
  font-family: inherit;
}